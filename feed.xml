<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://thib.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://thib.me/" rel="alternate" type="text/html" /><updated>2023-04-27T21:03:21+00:00</updated><id>https://thib.me/feed.xml</id><title type="html">Thibaud’s blog</title><subtitle>Logbook of a software engineer navigating web development</subtitle><author><name>Thibaud Colas</name></author><entry><title type="html">Google Season of Docs: Creating Wagtail Developer Onboarding Tutorials</title><link href="https://thib.me/google-season-of-docs-creating-wagtail-developer-onboarding-tutorials" rel="alternate" type="text/html" title="Google Season of Docs: Creating Wagtail Developer Onboarding Tutorials" /><published>2023-04-14T17:59:00+00:00</published><updated>2023-04-14T17:59:00+00:00</updated><id>https://thib.me/google-season-of-docs-creating-wagtail-developer-onboarding-tutorials</id><content type="html" xml:base="https://thib.me/google-season-of-docs-creating-wagtail-developer-onboarding-tutorials"><![CDATA[<p>We are excited to announce our participation in the 2023 Google Season of Docs program!</p>

<!-- more -->

<p><img src="/images/blog/google-season-of-docs-creating-wagtail-developer-onboarding-tutorials/seasonofdocs-visual.png" alt="" /></p>

<p>This year, after a successful experience working with technical writers <a href="https://wagtail.org/blog/our-very-first-outreachy-interns/">as part of Outreachy</a>, we’ve decided to take part in <a href="https://developers.google.com/season-of-docs">Google Season of Docs</a>. We’re aiming to create more comprehensive onboarding tutorials for developers, and get better at how we engage with technical writers in our community.</p>

<h2 id="what-is-google-season-of-docs">What is Google Season of Docs</h2>

<p>Google Season of Docs (or GSoD) is an annual program organized by Google to support open source projects improving their documentation, and to give professional technical writers an opportunity to gain experience in open source. The program pairs writers with organizations to collaborate on specific documentation projects. It fosters a culture of knowledge sharing and appreciation for the essential role of documentation in software development.</p>

<p>This year, Google selected <a href="https://developers.google.com/season-of-docs/docs/participants">13 organisations</a> to support.</p>

<h2 id="why-were-taking-part">Why we’re taking part</h2>

<p>There are several reasons we decided to participate in GSoD this year:</p>

<ol>
  <li>Improve our “getting started” documentation: We recognize that comprehensive, well-written documentation is crucial for the adoption and growth of any software project. Improving the “first thirty minutes of Wagtail” has been <a href="https://wagtail.org/blog/wagtail-vision/">part of our vision</a> for Wagtail in 2023 – focusing on the next few steps in developers’ onboarding feels natural.</li>
  <li>Learn from experienced technical writers: Collaboration with skilled technical writers brings fresh perspectives and insights that help us enhance our documentation processes and overall project communication. We got to see this happening for <a href="https://guide.wagtail.org/">guide.wagtail.org</a> during Outreachy, and are hoping to do the same for developer docs.</li>
  <li>Build relationships with the community: We hope GSoD will be a good opportunity to see how our <a href="https://wagtail.org/blog/wagtails-new-developer-relations-team/">new Developer Relations team</a> operates. Building developer tutorials will be a good opportunity to reach out to our community for feedback.</li>
</ol>

<h2 id="our-project">Our project</h2>

<p>Here is what we expect the project to consist of at this point:</p>

<ul>
  <li>Audit the existing Wagtail Get Started tutorial and create a friction log to ensure it is accessible and usable for newcomers.</li>
  <li>Use the friction log to update our primary tutorial and ensure it provides a strong basis for additional learning in the onboarding tutorial series.</li>
  <li>Review the Wagtail Bakery, an existing demo project used for teaching and testing, to determine which Wagtail features should be covered in the tutorials.</li>
  <li>Use the audit results to create a series of written tutorials for our documentation that teach newcomers how to build their own deployable Wagtail website using the newest version of Wagtail.</li>
  <li>Work with our community organisers to adapt the tutorials for open source beginners, which will support programs and workshops like Outreachy, GSoC, and Coders of Colour.</li>
  <li>Incorporate feedback from tutorial testers and the wider community.</li>
  <li>Work with the Wagtail core team to update our documentation and determine a process for maintaining the written tutorials going forward.</li>
  <li>Collaborate with our Developer Relations team to identify the best opportunities to share the tutorial with our community at upcoming events.</li>
</ul>

<h2 id="next-steps">Next steps</h2>

<p>We’re <a href="https://github.com/wagtail/wagtail/wiki/Google-Season-of-Docs-2023#getting-involved">accepting applications</a> from technical writers until April 15th (reach out in the <a href="https://github.com/wagtail/wagtail/wiki/Slack">Wagtail Slack workspace</a> in the <a href="https://app.slack.com/client/T0K33F93J/C051ERV9F9Q">#gsod channel</a> if you would welcome more time). We then hope to select a writer to work with by May 1st, and plan the next 6 months of work with them.</p>

<p>For more information, read through our <a href="https://github.com/wagtail/wagtail/wiki/Google-Season-of-Docs-2023">Google Season of Docs wiki page</a>.</p>]]></content><author><name>Thibaud Colas</name></author><category term="Wagtail" /><category term="Outreach" /><category term="Community" /><summary type="html"><![CDATA[We are excited to announce our participation in the 2023 Google Season of Docs program!]]></summary></entry><entry><title type="html">Evaluating the carbon footprint of Django and Wagtail - Django London</title><link href="https://thib.me/evaluating-carbon-footprint-django-wagtail" rel="alternate" type="text/html" title="Evaluating the carbon footprint of Django and Wagtail - Django London" /><published>2023-04-12T18:39:03+00:00</published><updated>2023-04-12T18:39:03+00:00</updated><id>https://thib.me/evaluating-carbon-footprint-django-wagtail</id><content type="html" xml:base="https://thib.me/evaluating-carbon-footprint-django-wagtail"><![CDATA[<p>Slides and data from my presentation at Django London April 2023.</p>

<!-- more -->

<ul>
  <li><a href="https://docs.google.com/presentation/d/1nt70OGv7yq-W0FOnaPeQAW42i6D1lMl3Fi_hEAADWgc/edit">Slides: Evaluating the carbon footprint of Django and Wagtail sites - Django London</a></li>
  <li><a href="https://docs.google.com/spreadsheets/d/1Pv1jqWh7crhhmponSseFh5iqpgL2H8REvtu_UMl31uY/edit">Data: Evaluating the carbon footprint of Django and Wagtail sites - Django London</a></li>
</ul>]]></content><author><name>Thibaud Colas</name></author><category term="Sustainability" /><category term="Climate" /><category term="Tools" /><category term="Talks" /><summary type="html"><![CDATA[Slides and data from my presentation at Django London April 2023.]]></summary></entry><entry><title type="html">Wagtail’s new Developer Relations team</title><link href="https://thib.me/wagtails-new-developer-relations-team" rel="alternate" type="text/html" title="Wagtail’s new Developer Relations team" /><published>2023-03-26T12:24:00+00:00</published><updated>2023-03-26T12:24:00+00:00</updated><id>https://thib.me/wagtails-new-developer-relations-team</id><content type="html" xml:base="https://thib.me/wagtails-new-developer-relations-team"><![CDATA[<p>We’re setting up a new contributors team for people interested in developer relations.</p>

<!-- more -->

<p>We’re now kickstarting a new developer relations team for Wagtail, to oversee how we engage with our community of developers. Sounds interesting? Consider joining!</p>

<h2 id="developer-relations">Developer relations</h2>

<p>As a general term, Developer Relations (or DevRel) is an umbrella term covering the relationships between Wagtail and developers within the project’s community. This encompasses marketing, training, community management, and other community-focused activities.</p>

<p>In the case of Wagtail – this could mean helping with our <a href="https://docs.wagtail.org/en/stable/">docs.wagtail.org</a> documentation site, or helping organise events such as <a href="https://www.wagtail.space/">Wagtail Space</a>. Or simply contributing developer experience focused improvements to the CMS.</p>

<h2 id="team-project-ideas">Team project ideas</h2>

<p>We’ve discussed a few project ideas that feel relevant already, though the team will decide for themselves once up and running:</p>

<ul>
  <li>Maintaining ready-to-use Wagtail tutorials or workshops – our current “Getting started” tutorial works well but is very short.</li>
  <li>Supporting Wagtail Space events – working with local organisers to make those events simpler to set up and run.</li>
  <li>Helping produce feature videos – to share the latest improvements made to the CMS.</li>
  <li>“Pitch Wagtail to your boss” slide deck – to describe Wagtail to stakeholders.</li>
  <li>Developer experience survey – helping us understand what capabilities would be most desirable to our main audience.</li>
</ul>

<h2 id="how-you-can-help">How you can help</h2>

<p>If you want to help shape Wagtail’s future, consider joining for the initial 6-month membership! All backgrounds and levels of expertise welcome. In particular, we hope this team will work well for people who don’t code and still want to contribute to open source.</p>

<p>To join, come say hi in #developer-relations on the <a href="https://github.com/wagtail/wagtail/wiki/slack">Wagtail Slack</a>.</p>]]></content><author><name>Thibaud Colas</name></author><category term="Wagtail" /><category term="Outreach" /><category term="Community" /><summary type="html"><![CDATA[We’re setting up a new contributors team for people interested in developer relations.]]></summary></entry><entry><title type="html">Wagtail CMS projects for Google Summer of Code 2023</title><link href="https://thib.me/wagtail-cms-projects-for-google-summer-of-code-2023" rel="alternate" type="text/html" title="Wagtail CMS projects for Google Summer of Code 2023" /><published>2023-02-22T18:50:00+00:00</published><updated>2023-02-22T18:50:00+00:00</updated><id>https://thib.me/wagtail-cms-projects-for-google-summer-of-code-2023</id><content type="html" xml:base="https://thib.me/wagtail-cms-projects-for-google-summer-of-code-2023"><![CDATA[<p>For the third time, Wagtail is joining Google’s open source internships program.</p>

<!-- more -->

<p><img src="/images/blog/wagtail-cms-projects-for-google-summer-of-code-2023/wagtail-gsoc-social-preview.png" alt="" /></p>

<p>It’s official! Following our <a href="https://wagtail.org/blog/outreachy-welcoming-new-contributors-to-open-source/">participation to Outreachy</a> in the December 2022 cohort, Wagtail is taking part in <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a>.</p>

<h2 id="what-is-google-summer-of-code">What is Google Summer of Code</h2>

<p>Also known as GSoC, Google Summer of Code is a global, online program focused on bringing new contributors into open source software development. GSoC Contributors work with an open source organization on a 12+ week programming project under the guidance of mentors.</p>

<h2 id="project-ideas">Project ideas</h2>

<p>We’ve earmarked three project ideas this year.</p>

<h3 id="dark-theme-for-wagtail-admin">Dark theme for Wagtail admin</h3>

<p><em>🚧 Update: we have discontinued this idea, as the work involved isn’t substantial enough to represent a GSoC project.</em></p>

<p>This is a continuation of past projects to make Wagtail’s color theme configurable, and accessibility improvements for Windows High Contrast mode users.</p>

<p>Here is the latest prototype of our dark theme, in a high contrast variant:</p>

<p><img src="/images/blog/wagtail-cms-projects-for-google-summer-of-code-2023/dark-high-contrast.png" alt="Wagtail dark theme prototype, in high contrast mode" /></p>

<p>For more information, see <a href="https://github.com/wagtail/wagtail/issues/10056">Dark theme for the admin interface #10056</a>.</p>

<h3 id="rfc-72-background-workers">RFC 72: Background workers</h3>

<p>Wagtail currently doesn’t have a first-party solution for long-running tasks. Other CMSs in the ecosystem such as WordPress and Drupal have background workers, allowing them to push tasks into the background to be processed at a later date, without requiring the end user to wait for them to occur.</p>

<p>One of the key goals for this project is removing the requirement for the user to wait for tasks they don’t need to.</p>

<p>For more information, see <a href="https://github.com/wagtail/rfcs/pull/72">RFC 72: Background workers</a>.</p>

<h3 id="greener-coding-wagtails-climate-impact">Greener coding: Wagtail’s climate impact</h3>

<p>We’re starting to have a better understanding of the<a href="https://github.com/wagtail/wagtail/discussions/8843">climate impact of Wagtail</a> as a CMS, and how we can reduce it. We want to integrate our findings into Wagtail’s direction, and make concrete improvements to the project to reduce related carbon emissions.</p>

<p>This project is part of a partnership with the <a href="https://www.thegreenwebfoundation.org/">Green Web Foundation</a>, with mentors from both organisations.</p>

<h2 id="how-to-participate">How to participate</h2>

<p>Head over to our <a href="https://wagtail.org/gsoc">GSoC documentation</a> and <a href="https://github.com/wagtail/gsoc/discussions">GSoC Discussions</a>. Review our contributor guide, and come say hi!</p>

<h2 id="whats-next">What’s next</h2>

<p>We hope to hear from a lot of newcomers through the <a href="https://developers.google.com/open-source/gsoc/timeline">application period</a>, where candidates get to know different communities and apply to projects. We’ll make sure to share more information about projects that are going ahead and their respective contributors once details are confirmed, closer to the summer.</p>]]></content><author><name>Thibaud Colas</name></author><category term="Wagtail" /><category term="Outreach" /><category term="Community" /><summary type="html"><![CDATA[For the third time, Wagtail is joining Google’s open source internships program.]]></summary></entry><entry><title type="html">2023 web conferences</title><link href="https://thib.me/2023-web-conferences" rel="alternate" type="text/html" title="2023 web conferences" /><published>2023-01-08T17:42:03+00:00</published><updated>2023-01-08T17:42:03+00:00</updated><id>https://thib.me/2023-web-conferences</id><content type="html" xml:base="https://thib.me/2023-web-conferences"><![CDATA[<p>Here is a small list of conferences I put together for 2023, as I was looking for speaking opportunities, with a particular focus on Europe and America. Hope this helps!</p>

<!-- more -->

<h2 id="uk-govcamp-2023">UK GovCamp 2023</h2>

<p>Saturday 21 January 2023. Unconference, CFP on the day.</p>

<p><a href="https://www.ukgovcamp.com/2022/10/05/were-back/">https://www.ukgovcamp.com/2022/10/05/were-back/</a></p>

<h2 id="djangoday-cph-2023">DjangoDay CPH 2023</h2>

<p>Autumn 2023. No CFP currently.</p>

<p><a href="https://2023.djangoday.dk/">https://2023.djangoday.dk/</a></p>

<h2 id="pycon-us-2023">PyCon US 2023</h2>

<p>Salt Lake City, Utah - April 19, 2023 - April 27, 2023.</p>

<p><a href="https://us.pycon.org/2023/">https://us.pycon.org/2023/</a></p>

<h2 id="cityjs-london">CityJS London</h2>

<p>10-12th April 2023.</p>

<p><a href="https://london.cityjsconf.org/">https://london.cityjsconf.org/</a></p>

<h2 id="python-web-conf">Python Web Conf</h2>

<p>March 13 - 17 2023. Online.</p>

<p><a href="https://2023.pythonwebconf.com/">https://2023.pythonwebconf.com/</a></p>

<h2 id="mixit-2023">MiXiT 2023</h2>

<p>Lyon - April 13th &amp; 14th, 2023</p>

<p><a href="https://mixitconf.org/en/">https://mixitconf.org/en/</a></p>

<h2 id="pycon-italy-2023">PyCon Italy 2023</h2>

<p>Florence, 25-28 May 2023</p>

<p><a href="https://pycon.it/en">https://pycon.it/en</a></p>

<h2 id="pixel-pioneers-2023">Pixel Pioneers 2023</h2>

<p>16 June 2023, Bristol. No CFP.</p>

<p><a href="https://pixelpioneers.co/">https://pixelpioneers.co/</a></p>

<h2 id="halfstack-newquay-2023">HalfStack Newquay 2023</h2>

<p>Friday 23rd of June 2023, 10am - Late. Newquay (/ˈnjuːki/) (UK). CFP under way, no deadline.</p>

<p>Creative JavaScript and web development.</p>

<p><a href="https://halfstackconf.com/newquay/">https://halfstackconf.com/newquay/</a></p>

<h2 id="canux-2023">CanUX 2023</h2>

<p>Nov 1-4 in Ottawa, Canada.</p>

<p><a href="https://canux.io/">https://canux.io/</a></p>

<h2 id="a11yto-conf">#a11yTO Conf</h2>

<p>Downtown Toronto October 18th-21st</p>

<p><a href="https://a11yto.com/">https://a11yto.com/</a></p>

<h2 id="all-things-open-2023">All Things Open 2023</h2>

<p>October 15 – 17, Raleigh, NC.</p>

<p><a href="https://www.allthingsopen.org/">https://www.allthingsopen.org/</a></p>

<h2 id="djangocon-us-2023">DjangoCon US 2023</h2>

<p>Durham, North Carolina – October 16-20, 2023.</p>

<p><a href="https://2023.djangocon.us/">https://2023.djangocon.us/</a></p>

<h2 id="pycon-uk-2023">PyCon UK 2023</h2>

<p>Friday 22nd September to Monday 25th September 2023. No CFP announced yet.</p>

<p><a href="https://2023.pyconuk.org/">https://2023.pyconuk.org/</a></p>

<h2 id="djangocon-eu-2023">DjangoCon EU 2023</h2>

<p>29th May - 2nd June 2023</p>

<p><a href="https://2023.djangocon.eu/">https://2023.djangocon.eu/</a></p>

<h2 id="other-lists">Other lists</h2>

<ul>
  <li><a href="https://confs.tech/">https://confs.tech/</a></li>
  <li><a href="https://frontendfront.com/conferences/">https://frontendfront.com/conferences/</a></li>
</ul>]]></content><author><name>Thibaud Colas</name></author><category term="Conference" /><category term="Python" /><category term="JavaScript" /><category term="Community" /><summary type="html"><![CDATA[Here is a small list of conferences I put together for 2023, as I was looking for speaking opportunities, with a particular focus on Europe and America. Hope this helps!]]></summary></entry><entry><title type="html">Measuring dark mode’s energy savings</title><link href="https://thib.me/measuring-dark-mode-energy-savings" rel="alternate" type="text/html" title="Measuring dark mode’s energy savings" /><published>2022-11-23T21:18:03+00:00</published><updated>2022-11-23T21:18:03+00:00</updated><id>https://thib.me/measuring-dark-mode-energy-savings</id><content type="html" xml:base="https://thib.me/measuring-dark-mode-energy-savings"><![CDATA[<p>I’ve heard lots over the year that “dark themes for sites use up less energy”. Last week we bought a new OLED TV, which is the first OLED device I’ve ever owned, so I finally got a chance to experience whether / how much that was true.</p>

<!-- more -->

<p>So I tested <a href="https://guide.wagtail.org/en-latest/">guide.wagtail.org</a>, on which we recently added a dark theme, displaying the homepage with the TV plugged into a watt meter.</p>

<ul>
  <li>With the light theme, the TV uses 63W.</li>
  <li>With the dark theme, it uses 34W.</li>
</ul>

<p>That’s a stark difference but it gets worse: this TV has lots of onboard processing, so turning off the panel itself with everything else on, the TV still consumes 31W. Which means the TV panel consumes 3W to display in the dark theme, and 33W, 10x more, to display the light theme.</p>

<p>This reduction in power consumption only applies to OLED devices, which have a limited market share but are getting more common.</p>

<h2 id="testing-a-real-world-website">Testing a real-world website</h2>

<p>The Wagtail user guide is a real production site but doesn’t necessarly represent a typical site: it’s text-heavy, even on its homepage. Let’s now try out <a href="https://www.rnib.org.uk/">rnib.org.uk</a>, for which my company recently implemented a dark theme.</p>

<p>Here’s the results on my TV:</p>

<p><img src="/images/blog/measuring-dark-mode-energy-savings/rnib-oled-energy.jpg" alt="Side-by-side shots of the RNIB website with a power meter in front. On the left is a light theme where the power meter says 59.1. On the right dark theme and the power meter says 35.8" /></p>

<ul>
  <li>With the light theme, the TV uses 59.1W.</li>
  <li>With the dark theme, the TV uses 35.8W.</li>
</ul>

<p>Assuming the  same 31W for TV components other than the panel, this means a panel consumption of 28W for the light theme, and 4.8W for the dark theme. That’s a 83% reduction in power consumption.</p>]]></content><author><name>Thibaud Colas</name></author><category term="Climate" /><category term="Sustainability" /><category term="Accessibility" /><summary type="html"><![CDATA[I’ve heard lots over the year that “dark themes for sites use up less energy”. Last week we bought a new OLED TV, which is the first OLED device I’ve ever owned, so I finally got a chance to experience whether / how much that was true.]]></summary></entry><entry><title type="html">Outreachy: welcoming new contributors to open source</title><link href="https://thib.me/outreachy-welcoming-new-contributors-to-open-source" rel="alternate" type="text/html" title="Outreachy: welcoming new contributors to open source" /><published>2022-10-10T18:50:00+00:00</published><updated>2022-10-10T18:50:00+00:00</updated><id>https://thib.me/outreachy-welcoming-new-contributors-to-open-source</id><content type="html" xml:base="https://thib.me/outreachy-welcoming-new-contributors-to-open-source"><![CDATA[<p>For the first time, Wagtail is joining Outreachy’s open source internships program</p>

<!-- more -->

<p><img src="/images/blog/outreachy-welcoming-new-contributors-to-open-source/outreachy-banner.jpg" alt="Outreachy - Internships supporting diversity in Free and Open Source Software" /></p>

<p>As an experienced open source contributor, onboarding newcomers into the world of open source is amongst the most rewarding tasks. After a successful participation to <a href="https://wagtail.org/blog/google-summer-of-code-2022-wagtail-midterm/">this year’s Google Summer of Code</a>, we’re back at it already with <a href="https://www.outreachy.org/">Outreachy</a>, joining their December 2022 cohort.</p>

<h2 id="what-is-outreachy">What is Outreachy</h2>

<p>Outreachy provides <strong>internships in open source and open science.</strong> The program provides internships to people subject to systemic bias and impacted by under-representation in the technical industry where they are living. Internships are fully remote, over 3 months, with interns receiving a fair stipend to support their work.</p>

<p>For Wagtail, this type of program is one of the best ways to work with more diverse contributors. We’re elated to have been selected, and hope we’ll get to work with between one and three new contributors this year.</p>

<h2 id="the-project-ideas">The project ideas</h2>

<p>Compared to Google Summer of Code, Outreachy only allows mentors to propose project ideas, rather than candidates. We’ve earmarked three project ideas.</p>

<h3 id="a-built-in-accessibility-checker-for-wagtail">A built-in accessibility checker for Wagtail</h3>

<p>This project is fundamental to meeting our <a href="https://wagtail.org/accessibility/">accessibility commitments</a>. The primary goal is to integrate an existing accessibility test suite within the CMS in a way that takes advantage of the tool’s capabilities and Wagtail’s UI specificities. We envision this being part of Wagtail’s content previews: as the page content changes, authors see what the published page would look like, and get feedback on accessibility issues.</p>

<p>Here is a sneak peak at our first prototype:</p>

<p><img src="/images/blog/outreachy-welcoming-new-contributors-to-open-source/sa11y-prototype.png" alt="Screenshot of a prototype accessibility checker built into Wagtail's live preview" /></p>

<p><em>For more information about this project, to ask questions and provide feedback, follow</em> <a href="https://github.com/wagtail/wagtail/discussions/9262"><em>discussion #9262 Built-in Accessibility Checker</em></a><em> on GitHub.</em></p>

<h3 id="improving-wagtails-editor-guide">Improving Wagtail’s editor guide</h3>

<p>This project follows through <a href="https://wagtail.org/blog/google-summer-of-code-wagtail-editor-guide/">Hitansh Shah’s GSoC project</a>, where he created a new site for the Editor Guide documentation, with support from the project mentors. The new site looks fabulous:</p>

<p><img src="/images/blog/outreachy-welcoming-new-contributors-to-open-source/editor-guide.png" alt="Editor Guide landing page before-after" /></p>

<p>Now the next step is simply to revamp the content! This wasn’t part of Hitansh’s project, and is the perfect follow-up. We’re also very happy to propose a project idea where there is <strong>no need for contributors to know how to code</strong>.</p>

<p><em>For more information about this project, to ask questions and provide feedback, follow <a href="https://github.com/wagtail/guide/discussions/116">discussion #116 Outreachy: Improve user guide documentation for Wagtail</a>.</em></p>

<h3 id="stimulus-for-interactive-widgets-in-wagtail">Stimulus for interactive widgets in Wagtail</h3>

<p>Following the leadership of our contributor LB, our UI team has been carefully considering how to bring Wagtail’s JavaScript interactivity to modern standards. This project is the natural follow-up to LB’s excellent <a href="https://github.com/wagtail/rfcs/pull/78">RFC #78 for us to adopt Stimulus</a>: rolling it out across large swaths of the user interface.</p>

<p>The RFC is still going through the last stages of validation, so is the best way to follow up or comment on this project!</p>

<h2 id="how-to-participate">How to participate</h2>

<p>For aspiring newcomers already accepted in the December 2022 Outreachy cohort, head over to our <a href="https://github.com/wagtail/wagtail/wiki/Outreachy-2022">Outreachy 2022 wiki page</a> for more information about Wagtail, good resources, and a list of initial tasks.</p>

<p>For everyone else, we’d love to hear your thoughts on the project ideas, and are also actively looking for additional support so we can confidently take on all three projects. Join us in #outreachy on <a href="https://github.com/wagtail/wagtail/wiki/Slack">Wagtail’s Slack workspace</a>.</p>

<h2 id="whats-next">What’s next</h2>

<p>We hope to hear from a lot of newcomers through the <a href="https://www.outreachy.org/docs/community/#current-timeline">initial contribution period</a>, where candidates get to know different communities and apply to projects. We’ll make sure to share more information about projects that are going ahead and their respective contributors once details are confirmed, towards the end of November.</p>]]></content><author><name>Thibaud Colas</name></author><category term="Wagtail" /><category term="Outreach" /><category term="Accessibility" /><summary type="html"><![CDATA[For the first time, Wagtail is joining Outreachy’s open source internships program]]></summary></entry><entry><title type="html">Google Summer of Code 2022 for Wagtail</title><link href="https://thib.me/google-summer-of-code-2022-for-wagtail" rel="alternate" type="text/html" title="Google Summer of Code 2022 for Wagtail" /><published>2022-07-14T18:50:00+00:00</published><updated>2022-07-14T18:50:00+00:00</updated><id>https://thib.me/google-summer-of-code-2022-for-wagtail</id><content type="html" xml:base="https://thib.me/google-summer-of-code-2022-for-wagtail"><![CDATA[<p>This year, Wagtail gets to take part in Google Summer of Code independently!</p>

<!-- more -->

<p>We are participating with three projects:</p>

<ul>
  <li><a href="https://github.com/wagtail/wagtail/discussions/8193">Contrast Themes by Anuja Raj Verma</a></li>
  <li><a href="https://github.com/wagtail/wagtail/discussions/7824">Editor’s Guide - A standalone project by Hitansh Shah</a></li>
  <li><a href="https://github.com/wagtail/wagtail/discussions/8156">Toolkit for StreamField data migrations in Wagtail by Sandil Ranasinghe</a></li>
</ul>

<p>And we have a fourth project independently sponsored by Torchbox: <a href="https://github.com/wagtail/wagtail/discussions/8158">UX Unification by Paarth Agarwal</a>.</p>]]></content><author><name>Thibaud Colas</name></author><category term="Accessibility" /><category term="Wagtail" /><category term="Community" /><summary type="html"><![CDATA[This year, Wagtail gets to take part in Google Summer of Code independently!]]></summary></entry><entry><title type="html">MiXiT 2022: The 97.4% North Star</title><link href="https://thib.me/the-97-4-percent-north-star" rel="alternate" type="text/html" title="MiXiT 2022: The 97.4% North Star" /><published>2022-05-25T08:50:00+00:00</published><updated>2022-05-25T08:50:00+00:00</updated><id>https://thib.me/the-97-4-percent-north-star</id><content type="html" xml:base="https://thib.me/the-97-4-percent-north-star"><![CDATA[<p>Slides for my <a href="https://mixitconf.org/fr/2022/the-97-4-north-star">MiXiT 2022 talk</a>.</p>

<!-- more -->

<iframe src="https://player.vimeo.com/video/726166919?h=c0d26f9453&amp;title=0&amp;byline=0&amp;portrait=0" width="640" height="360" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen=""></iframe>

<ul>
  <li><a href="https://docs.google.com/presentation/d/1SdXC4eiPqhK3gvdV9pMsarEHqSzooPoUxRVoJrBT3iQ/edit?usp=sharing">Google Slides; The 97.4% North Star - Thibaud Colas - MiXiT 2022</a></li>
  <li><a href="https://drive.google.com/file/d/1TjCmQdEKC3pQ12N_ifRgGnReAnzvAGv_/view?usp=sharing">PDF export (4MB); The 97.4% North Star - Thibaud Colas - MiXiT 2022</a></li>
  <li><a href="https://docs.google.com/document/d/1nGrmreQjwP3be5Y0LNW-WPU4lLv1Qsv5nozlBvEZQkw/edit?usp=sharing">Plain-text export; The 97.4% North Star - Thibaud Colas - MiXiT 2022</a></li>
</ul>]]></content><author><name>Thibaud Colas</name></author><category term="Accessibility" /><category term="Talks" /><category term="Wagtail" /><summary type="html"><![CDATA[Slides for my MiXiT 2022 talk.]]></summary></entry><entry><title type="html">JavaScript and React skills benchmark</title><link href="https://thib.me/js-react-skills-benchmark" rel="alternate" type="text/html" title="JavaScript and React skills benchmark" /><published>2022-05-03T18:50:00+00:00</published><updated>2022-05-03T18:50:00+00:00</updated><id>https://thib.me/js-react-skills-benchmark</id><content type="html" xml:base="https://thib.me/js-react-skills-benchmark"><![CDATA[<p>As a follow-up to my React training goals for front-end developers, here is a list of React and JS skills across different levels of expertise. This is meant to facilitate self-score themselves.</p>

<!-- more -->

<h2 id="javascript">JavaScript</h2>

<h3 id="beginner">Beginner</h3>

<h4 id="vanilla-javascript-fundamentals">Vanilla JavaScript fundamentals</h4>

<ul>
  <li>Knows about ES modules – named and default exports</li>
  <li>Knows what control structures and Array methods to use for iteration</li>
  <li>Understands scopes, hoisting, closures, <code class="language-plaintext highlighter-rouge">const</code> vs. <code class="language-plaintext highlighter-rouge">let</code></li>
  <li>Uses template literals for string concatenation</li>
  <li>Understands destructuring, and the spread and rest operators</li>
  <li>Understands when to use and not to use regular expressions</li>
  <li>Understands the difference between mutable and immutable data structures and can describe common issues associated with their use.</li>
  <li>Can write asynchronous code with callbacks and Promises</li>
  <li>Can write basic error handling code with exception handling and console APIs</li>
  <li>Can write code to execute on a timer or interval with the right APIs</li>
</ul>

<h4 id="dom-apis-fundamentals">DOM APIs fundamentals</h4>

<ul>
  <li>Knows what jQuery does and why it’s no longer relevant</li>
  <li>Knows about cross-browser support requirements and how to check support for a given technology</li>
  <li>Knows how to manage UI animations with JavaScript</li>
  <li>Can manage DOM event listeners and knows what common performance pitfalls to look out for with user-initiated events</li>
  <li>Can use throttling or debounce for a performance-sensitive event</li>
  <li>Can manipulate DOM elements, adding or removing them, setting attributes</li>
</ul>

<h4 id="javascript-tooling-fundamentals">JavaScript tooling fundamentals</h4>

<ul>
  <li>Knows what Node.js is and how to install a given version</li>
  <li>Can set up and use the JS tooling on wagtail-kit autonomously</li>
  <li>Knows how to use the browser DevTools Console panel</li>
  <li>Knows how to use the browser DevTools Elements panel</li>
  <li>Knows how to use a REPL for JavaScript</li>
  <li>Understands the npm packages ecosystem and the npm CLI</li>
  <li>Knows about the package.json and how to install dependencies</li>
  <li>Knows about Prettier, ESLint, Jest, and how to run them</li>
  <li>Knows what Babel and Webpack are for</li>
</ul>

<h4 id="javascript-as-a-language-bonus-points">JavaScript as a language (bonus points)</h4>

<ul>
  <li>Knows about the history of JavaScript – Brendan Eich, the 10 days, TC-39, ECMA-262</li>
  <li>Has watched Wat</li>
  <li>Knows about JSFuck - Write any JavaScript with 6 Characters: <code class="language-plaintext highlighter-rouge">[]()!+</code></li>
</ul>

<h3 id="intermediate">Intermediate</h3>

<h4 id="vanilla-js--dom-apis-intermediate">Vanilla JS &amp; DOM APIs intermediate</h4>

<ul>
  <li>Has read the Airbnb JavaScript styleguide</li>
  <li>Can use requestAnimationFrame and requestIdleCallback to defer expensive computations</li>
  <li>Knows how and when to use regular expressions, and can use them for basic string pattern matching</li>
  <li>Knows all of the ES modules syntax for static imports</li>
  <li>Knows all of the syntax of ES6 classes, and when to use classes</li>
  <li>Understands event propagation in the DOM and when to customise it with <code class="language-plaintext highlighter-rouge">stopPropagation</code>, when to rely on bubbling vs capture</li>
  <li>Is aware of TypeScript and understands what static types bring to JavaScript</li>
  <li>Is aware of other compile-to-JS languages and understands their value proposition: Dart, Elm, CoffeeScript, PureScript, ReasonML, ClojureScript, Opal</li>
  <li>Is aware of WebAssembly’s value proposition</li>
  <li>Knows how to assess the quality of a npm package: popularity, support, security, accessibility, performance</li>
</ul>

<h4 id="testing-javascript-fundamentals">Testing JavaScript fundamentals</h4>

<ul>
  <li>Can write simple unit tests with Jest</li>
  <li>Can test DOM manipulation code with Jest</li>
  <li>Knows how to use Jest in watch mode with different filters</li>
  <li>Understands what test coverage represents, and how to view it with Jest</li>
  <li>Understands the difference between running code in tests in Node and in browsers</li>
  <li>Is aware of tools to automate browser testing</li>
  <li>Knows about code complexity and how to assess it for a given implementation</li>
</ul>

<h4 id="debugging-javascript">Debugging JavaScript</h4>

<ul>
  <li>Can use the different console APIs</li>
  <li>Knows how to set and manage breakpoints in the browser DevTools debugger</li>
  <li>Knows what the call stack is and how to navigate up and down the stack in a debugger</li>
  <li>Understands the differences between source and output JavaScript, and what source maps are for</li>
  <li>Knows what JS error monitoring is for, and how to use it with Sentry</li>
  <li>Is aware of potential performance issues in JavaScript and options to investigate those issues</li>
</ul>

<h4 id="javascript-as-a-mindset-bonus-points">JavaScript as a mindset (bonus points)</h4>

<ul>
  <li>Understands what ASI does and a common case where it can’t be relied on</li>
  <li>Knows what the output of <code class="language-plaintext highlighter-rouge">{[{}]:[{}]}</code> is</li>
  <li>Knows about with statements and labels</li>
</ul>

<h3 id="advanced">Advanced</h3>

<h4 id="vanilla-js--dom-apis-advanced">Vanilla JS &amp; DOM APIs advanced</h4>

<ul>
  <li>Can use functional programming idioms in JavaScript: currying, partial application, method chaining</li>
  <li>Can use all common Array iteration methods: <code class="language-plaintext highlighter-rouge">filter</code>, <code class="language-plaintext highlighter-rouge">map</code>, <code class="language-plaintext highlighter-rouge">some</code>, <code class="language-plaintext highlighter-rouge">every</code>, <code class="language-plaintext highlighter-rouge">reduce</code></li>
  <li>Can manipulate URLs in JavaScript with standard library <code class="language-plaintext highlighter-rouge">URL</code> and <code class="language-plaintext highlighter-rouge">URLSearchParams</code> APIs</li>
  <li>Can use <code class="language-plaintext highlighter-rouge">Map</code> and <code class="language-plaintext highlighter-rouge">Set</code> objects</li>
  <li>Can use ES dynamic imports</li>
  <li>Is aware of Web Components – high-level capabilities and common APIs</li>
  <li>Can use shallow or deep copy patterns as appropriate to create fully immutable code.</li>
  <li>Can get up to speed and be productive with JS frameworks such as Vue, Svelte, Alpine.js, Stimulus, Angular</li>
  <li>Can use vanilla JS date manipulation methods to read and format dates, times, datetimes, including usage of modern Temporal APIs</li>
</ul>

<h4 id="typescript-fundamentals">TypeScript fundamentals</h4>

<ul>
  <li>Understands what TypeScript brings compared to vanilla JavaScript</li>
  <li>Can use TypeScript syntax to add type annotations to vanilla JS code with built-in types</li>
  <li>Can define basic custom types with union types and interfaces</li>
  <li>Can use generics for arrays</li>
  <li>Can use the <code class="language-plaintext highlighter-rouge">typeof</code>, <code class="language-plaintext highlighter-rouge">keyof</code>, <code class="language-plaintext highlighter-rouge">const</code> TypeScript keywords to reduce boilerplate in type definitions</li>
  <li>Understands what type narrowing is and how to implement basic typeof or null check type guards</li>
</ul>

<h4 id="api-integrations--data-management">API integrations &amp; data management</h4>

<ul>
  <li>Understands the difference between callbacks, promises, and async/await</li>
  <li>Can use <code class="language-plaintext highlighter-rouge">async</code> / <code class="language-plaintext highlighter-rouge">await</code> for asynchronous code</li>
  <li>Understands the data flow when using Redux with async action creators, with “start”, “success”, “error” actions for a given API call</li>
  <li>Can use the <code class="language-plaintext highlighter-rouge">fetch</code> API with JSON and <code class="language-plaintext highlighter-rouge">FormData</code> to GET or POST data to API endpoints</li>
  <li>Knows how to abort a fetch request</li>
  <li>Can use client-side routing APIs to store state in the URL</li>
</ul>

<h4 id="progressive-web-apps-pwa">Progressive Web Apps (PWA)</h4>

<ul>
  <li>Understands what Service Workers are for and when to use them</li>
  <li>Can set up offline support with a high-level library like Workbox</li>
  <li>Has awareness of PWA limitations across different browsers</li>
  <li>Can use <code class="language-plaintext highlighter-rouge">sessionStorage</code>, <code class="language-plaintext highlighter-rouge">localStorage</code> and cookie APIs to store data client-side</li>
</ul>

<h4 id="javascript-as-an-ecosystem-bonus-points">JavaScript as an ecosystem (bonus points)</h4>

<ul>
  <li>Knows about different popular JS implementations and their high-level characteristics: V8, JavaScriptCore, Deno</li>
  <li>Knows where to look for the most recent stage-2/3 proposals</li>
  <li>Knows about the “small modules philosophy” and its pitfalls</li>
</ul>

<h3 id="expert">Expert</h3>

<h4 id="vanilla-js--dom-apis-mastery">Vanilla JS &amp; DOM APIs mastery</h4>

<ul>
  <li>Can use functional JavaScript array iteration idioms to manipulate objects, with Object.entries, Object.fromEntries, and other methods</li>
  <li>Understands common encoding issues in JavaScript, UTF-16 vs. UTF-32, and can implement Unicode-aware (surrogate pairs) string processing</li>
  <li>Can create a JS API based on higher-order functions and decorators</li>
  <li>Knows about the <code class="language-plaintext highlighter-rouge">MutationObserver</code> and <code class="language-plaintext highlighter-rouge">IntersectionObserver</code> APIs</li>
  <li>Can use JS Intl and Date APIs to work across dates and numbers in different time zones and locales</li>
  <li>Can use browser DevTools to troubleshoot performance issues with JS execution flame graphs, memory and CPU profiling</li>
  <li>Understands what the global object is and how it differs between the main thread, web workers, and Node</li>
  <li>Can use the performance APIs to manually instrument code</li>
</ul>

<h4 id="typescript-mastery">TypeScript mastery</h4>

<ul>
  <li>Understands the performance considerations of type definitions and common mitigations (for example reliance on inference, interfaces vs. type aliases)</li>
  <li>Can write correct module declaration files for APIs of third-party packages</li>
  <li>Can write custom generic types and conditional types</li>
  <li>Can demonstrate usage of 5 of TypeScript’s utility types in real-world projects such as <code class="language-plaintext highlighter-rouge">Omit</code>, <code class="language-plaintext highlighter-rouge">Readonly</code>, <code class="language-plaintext highlighter-rouge">Required</code>, <code class="language-plaintext highlighter-rouge">Partial</code>, <code class="language-plaintext highlighter-rouge">NonNullable</code>.</li>
  <li>Knows the difference between any, never, unknown types</li>
</ul>

<h4 id="client-side-architecture-mastery">Client-side architecture mastery</h4>

<ul>
  <li>Can use the <code class="language-plaintext highlighter-rouge">FileReader</code>, <code class="language-plaintext highlighter-rouge">File</code>, and <code class="language-plaintext highlighter-rouge">ArrayBuffer</code> APIs to process files client-side</li>
  <li>Can implement cross-origin communication via iframes and postMessage</li>
  <li>Can demonstrate an understanding of advanced Redux patterns such as middleware for state saves or actions’ meta processing</li>
  <li>Can implement state normalisation patterns within Redux</li>
  <li>Can use Web Workers to move processing off the main thread</li>
</ul>

<h4 id="javascript-as-a-runtime-bonus-points">JavaScript as a runtime (bonus points)</h4>

<ul>
  <li>Understands when Just-In-Time compilation kicks in, in which engines, and how to optimise for it</li>
  <li>Knows how to do memory profiling &amp; heap snapshots in V8 or Chrome</li>
  <li>Understands how vulnerabilities like Spectre and Meltdown affect JavaScript</li>
</ul>

<hr />

<h2 id="react">React</h2>

<h3 id="beginner-1">Beginner</h3>

<h4 id="react-ui-components-fundamentals">React UI components fundamentals</h4>

<ul>
  <li>Understands React’s component-driven, declarative UI paradigm</li>
  <li>Can use props to pass data between parent and child components, with default values where needed</li>
  <li>Can use PropTypes or TypeScript to validate a component’s props</li>
  <li>Understands JSX syntax compared to HTML</li>
  <li>Has a high-level understanding of the component lifecycle</li>
  <li>Can manage local component state with useState</li>
  <li>Can implement a <code class="language-plaintext highlighter-rouge">useEffect</code> hook to run code when a component mounts and unmounts</li>
  <li>Can set data on a parent component with a callback</li>
  <li>Has been through official Thinking in React tutorial Thinking in React – React</li>
</ul>

<h4 id="react-tooling-fundamentals">React tooling fundamentals</h4>

<ul>
  <li>Understands what a JSX transform is, what popular parsers include one</li>
  <li>Knows about React-specific aspects of Prettier, ESLint, Jest, and how to run those tools</li>
  <li>Can use basic Inspect functionality of the React DevTools to troubleshoot rendering issues</li>
  <li>Knows what different types of testing are possible for React components with tools like Jest and Storybook</li>
  <li>Can update React unit tests and Storybook stories</li>
</ul>

<h4 id="react-as-a-paradigm-shift-bonus-points">React as a paradigm shift (bonus points)</h4>

<ul>
  <li>Knows why React calls itself a library rather than a framework</li>
  <li>Knows the reasons why React uses <code class="language-plaintext highlighter-rouge">className</code> rather than the <code class="language-plaintext highlighter-rouge">class</code> attribute</li>
  <li>Understands what React refers to by “Escape Hatches”</li>
</ul>

<h3 id="intermediate-1">Intermediate</h3>

<h4 id="react-ui-components-intermediate">React UI components intermediate</h4>

<ul>
  <li>Knows what React’s <code class="language-plaintext highlighter-rouge">key</code> prop is for and the consequences of using it incorrectly</li>
  <li>Understand how <code class="language-plaintext highlighter-rouge">useEffect</code> deps behave with primitives vs object references (common issue is when an empty object or array is used as a default value)</li>
  <li>Knows when to use <code class="language-plaintext highlighter-rouge">useCallback</code> to have a stable function reference</li>
  <li>Can use <code class="language-plaintext highlighter-rouge">dangerouslySetInnerHTML</code> to integrate with legacy HTML, understanding the security implications</li>
  <li>Knows what props spreading is and why it should generally be avoided</li>
  <li>Can use refs to integrate with vanilla DOM manipulation</li>
  <li>Can create new components from scratch following a basic file structure co-locating components, their tests, and styles</li>
  <li>Knows what React’s <code class="language-plaintext highlighter-rouge">Portal</code> API is for and how to use it</li>
</ul>

<h4 id="react-state-management-fundamentals">React state management fundamentals</h4>

<ul>
  <li>Understands how React’s data flow differs from two-way data binding</li>
  <li>Knows in what cases to reach for <code class="language-plaintext highlighter-rouge">useState</code>, <code class="language-plaintext highlighter-rouge">useReducer</code>, Context, and Redux</li>
  <li>Knows what it means to “lift state up” in a React component hierarchy, and how to do it</li>
  <li>Can use <code class="language-plaintext highlighter-rouge">useState</code> and <code class="language-plaintext highlighter-rouge">useReducer</code> to manage state within components</li>
  <li>Knows about Context APIs to share state indirectly in a component hierarchy</li>
  <li>Can set up Redux Toolkit on a new project with a basic slice</li>
  <li>Can use the Redux DevTools to troubleshoot state storage and propagation issues</li>
</ul>

<h4 id="typescript-fundamentals-1">TypeScript fundamentals</h4>

<ul>
  <li>Understands what TypeScript brings compared to vanilla JavaScript</li>
  <li>Can use TypeScript syntax to add type annotations to vanilla JS code with built-in types</li>
  <li>Can define basic custom types with union types and interfaces</li>
  <li>Can use generics for arrays</li>
  <li>Can use the <code class="language-plaintext highlighter-rouge">typeof</code> and <code class="language-plaintext highlighter-rouge">keyof</code> TypeScript keywords to reduce boilerplate in type definitions</li>
  <li>Understands what type narrowing is and how to implement basic <code class="language-plaintext highlighter-rouge">typeof</code> or null check type guards</li>
  <li>Can create interfaces for the props and states of React components, including annotations for children</li>
</ul>

<h4 id="react-tooling-intermediate">React tooling intermediate</h4>

<ul>
  <li>Can write Storybook stories for components from scratch, with appropriate usage of CSF and args APIs</li>
  <li>Can write unit tests for components from scratch, with appropriate usage of shallow vs. deep rendering, snapshot testing, and different methods to query sub-elements of a component</li>
  <li>Can set up and configure React linting with <code class="language-plaintext highlighter-rouge">eslint-config-torchbox</code> on a project</li>
  <li>Can use the profiler in the React DevTools to troubleshoot performance issues</li>
  <li>Knows about the differences between React’s dev and production modes, as well as StrictMode</li>
</ul>

<h4 id="react-mindset-bonus-points">React mindset (bonus points)</h4>

<ul>
  <li>Can name two libraries that are API-compatible with vanilla React with a focus on performance</li>
  <li>Can name who the creators of React and Redux are</li>
  <li>Knows what it means to eject a create-react-app project</li>
</ul>

<h3 id="advanced-1">Advanced</h3>

<h4 id="react-architecture">React architecture</h4>

<ul>
  <li>Understands the differences between React versions 16, 17, 18, and knows what React API to use to help check whether a given app is compatible with future versions</li>
  <li>Can help make project-based decisions on when it is suitable to adopt React and what the approach should be.</li>
  <li>Can structure a React app’s JS code from scratch with 10+ components</li>
  <li>Can implement error boundaries at appropriate places in the React component hierarchy</li>
  <li>Knows about problems with managing form state in React, what libraries are available</li>
  <li>Can use a React forms library to build a form with client-side and server-side validation</li>
  <li>Can write React wrappers for any UI widget written with another library (for example integrating a non-React date picker)</li>
  <li>Can set up a CSS-in-JS library for React components</li>
</ul>

<h4 id="react-state-management-intermediate">React state management intermediate</h4>

<ul>
  <li>Can structure Redux reducers and actions with or without Redux Toolkit with 3+ slices, following the Ducks pattern</li>
  <li>Can structure API integration code with Redux actions, including loading states and error handling, with or without RTK Query</li>
  <li>Can troubleshoot a React and Redux data manipulation issue on any project with React &amp; Redux DevTools only</li>
  <li>Knows when to reach out for memoization of state, or memoized components. Can implement it in practice, and deal with common issues with references</li>
</ul>

<h4 id="typescript-intermediate">TypeScript intermediate</h4>

<ul>
  <li>Knows about the different ways to type React components and why some are preferred to others</li>
  <li>Understands the performance considerations of type definitions and common mitigations (for example reliance on inference, interfaces vs. type aliases)</li>
  <li>Can write correct module declaration files for APIs of third-party packages</li>
  <li>Can write custom generic types and conditional types</li>
  <li>Can write or generate type annotations for GraphQL or REST APIs</li>
</ul>

<h4 id="single-page-apps-spa">Single-Page Apps (SPA)</h4>

<ul>
  <li>Can set up lazy-loading / code splitting of large components with the React.lazy API</li>
  <li>Can set up route-based lazy-loading / code splitting with a routing library and React.lazy</li>
  <li>Can set up client-side error monitoring with Sentry for a React app, integrating with error boundaries</li>
  <li>Can set up declarative client-side routing with a React library</li>
  <li>Knows how to test API integrations outside browsers, with tools like Postman or GraphiQL</li>
  <li>Knows how an SPA’s runtime characteristics can create issues with analytics software</li>
</ul>

<h4 id="react-outside-the-box-bonus-points">React outside the box (bonus points)</h4>

<ul>
  <li>Knows about XHP</li>
  <li>Can name three React rendering targets / libraries aside from react-dom and react-native</li>
  <li>Can name three compile-to-JS languages with declarative UI APIs similar to React</li>
</ul>

<h3 id="expert-1">Expert</h3>

<h4 id="react-architecture-mastery">React architecture mastery</h4>

<ul>
  <li>Can be a project lead on React builds</li>
  <li>Can create React app architectures from scratch through file structure, component hierarchy, application state structure, client-side routing structure</li>
  <li>Can create GraphQL and REST API integrations from scratch or with clients like Apollo</li>
  <li>Can set up an appropriate testing strategy for a React build between unit tests, e2e browser tests, and Storybook</li>
  <li>Knows how to create a design system UI library built on React components, including auto-generated documentation from props</li>
  <li>Knows about advanced APIs like cloning children and forwarding refs</li>
</ul>

<h4 id="single-page-apps-spa-advanced">Single-Page Apps (SPA) advanced</h4>

<ul>
  <li>Can advise on the tradeoffs of a SPA architecture, and appropriate mitigations for the most common limitations</li>
  <li>Knows how to set up authentication in a SPA project</li>
  <li>Can use bundle analysis tools to monitor and troubleshoot the size of JS bundles in a SPA build</li>
  <li>Can set up client-side performance monitoring instrumentation on a React app</li>
  <li>Can create SPA experiences with any React meta-framework such as Next.js or Remix</li>
</ul>

<h4 id="react-behind-the-scenes">React behind the scenes</h4>

<ul>
  <li>Knows how scheduling works in React and why they choose to leave it under the control of the library as much as possible</li>
  <li>Understands why React uses event delegation, how it’s implemented, and how it changed from React 16 to 17</li>
  <li>Knows what <code class="language-plaintext highlighter-rouge">__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED</code> is in React</li>
</ul>]]></content><author><name>Thibaud Colas</name></author><category term="JavaScript" /><category term="React" /><category term="Careers" /><summary type="html"><![CDATA[As a follow-up to my React training goals for front-end developers, here is a list of React and JS skills across different levels of expertise. This is meant to facilitate self-score themselves.]]></summary></entry></feed>